{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","to","title","role","onClick","toggleMode","type","id","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","checkColor","style","color","heading","value","placeholder","onChange","event","target","rows","required","disabled","length","newText","toLowerCase","replace","c","toUpperCase","showAlert","CapitalizeWords","i","previousCharacter","chars","split","join","n","charAt","document","getElementById","navigator","clipboard","writeText","filename","element","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","downloadasTextFile","filter","Alert","height","alert","word","lower","slice","Captilize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Navbar_Navbar","backgroundColor","key","Date","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.bc2f4403.chunk.js","sourcesContent":["import './Navbar.css';\nimport React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link, NavLink } from 'react-router-dom';\nexport default function Navbar(props) {\n\n  return (\n    <>\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n        <div className=\"container-fluid\">\n          <a className={`ms-2 navbar-brand text-${props.mode === 'warning' ? 'dark' : 'white'}`} to=\"/\">{props.title}</a>\n          <div className={`ms-auto me-2 form-check form-switch text-${props.mode === 'warning' ? 'dark' : 'light'}`}>\n            <input  role=\"switch\" className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\n            <label className=\"text-break text-wrap\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode === 'warning' ? 'Dark mode' : 'Light mode'}</label>\n          </div>\n\n        </div>\n      </nav>\n\n    </>\n  )\n}\n\nNavbar.propTypes = { title: PropTypes.string }","import React, {useState} from 'react'\n\nexport default function Textform(props) {\n\nconst [text,setText] = useState(\"\")\n\n    function downloadasTextFile (filename, text) {\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        \n        element.style.display = 'none';\n        document.body.appendChild(element);\n        \n        element.click();\n        \n        document.body.removeChild(element);\n    }\n    \n    // Start file download.\n    const download = () =>{\n    // Generate download of phpcodertech.txt file with some content\n    var filename = \"phpcodertech.txt\";\n    \n    downloadasTextFile(filename, text);\n    }\n\n    const lineCount = () => {\n          if (text === \"\") {\n              return 0;\n          }\n          else{\n             let newLine = text.split(\"\\n\").length\n             return newLine\n            }\n        }\n        \n    \n    const handleOnUpClick = () => {\n        // console.log(\"Uppercase was clicked \" + text);\n        let newText = text.toUpperCase()\n        setText(newText)\n        props.showAlert(\"Converted to Uppercase\",\"success\")\n    }\n    \n    const handleOnLoClick = () => {\n        // console.log(\"Uppercase was clicked \" + text);\n        let newText = text.toLowerCase()\n        setText(newText)\n        props.showAlert(\"Converted to Lowercase\",\"success\")\n    }\n    \n    const handleOnCap = () => {\n        \n        var CapitalizeWords = text[0].toUpperCase();  \n        for (var i = 1; i <= text.length - 1; i++) {  \n            let currentCharacter,  \n            previousCharacter = text[i - 1];  \n            if (previousCharacter && (previousCharacter === ' ' || previousCharacter === '\\n')) {  \n                currentCharacter = text[i].toUpperCase();  \n            } else {  \n                currentCharacter = text[i];  \n            }  \n            CapitalizeWords = CapitalizeWords + currentCharacter;  \n        }  \n        \n        setText(CapitalizeWords)\n        props.showAlert(\"Converted to Capitalize\",\"success\")\n    }\n    \n    function firstLetterUpper(theString) {\n        var newString = theString.toLowerCase().replace(/(^\\s*\\w|[.!?\\n]\\s*\\w)/g,function(c){return c.toUpperCase()});\n        return newString;\n    }\n    \n    const handleOnSentence = () => {\n        //alert(theString);\n        var newText = firstLetterUpper(text);\n        //console.log(\"Converted: \"+newString);\n        setText(newText)\n        props.showAlert(\"Converted to Sentence case\",\"success\")\n    }\n    \n    const handleOnAlter = () => {\n        var chars = text.toLowerCase().split(\"\");\n        for (var i = 0; i < chars.length; i += 2) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        setText(chars.join(\"\"))\n        props.showAlert(\"Converted to Altercase\",\"success\")\n    }\n    \n    \n    const handleOnInverse = () => {\n        var newText = '';\n        var i = 0;\n        while (i < text.length) {\n            var n = text.charAt(i);\n            if (n === n.toUpperCase()) {\n                n = n.toLowerCase();\n            }\n            else {\n                n = n.toUpperCase();\n            }\n            \n            i +=1; \n            newText += n;\n        }\n        \n        setText(newText)\n        props.showAlert(\"Converted to Inversecase\",\"success\")\n    }\n    \n    const handleOnClearClick = () => {\n        // console.log(\"Uppercase was clicked \" + text);\n        let newText = ''\n        setText(newText)\n        props.showAlert(\"Text is Cleared\",\"warning\")\n    }\n    \n    const handleCopy = () => {\n        let newText = document.getElementById(\"mybox\")\n        navigator.clipboard.writeText(newText.value)\n        props.showAlert(\"Text is Copied to Clipboard\",\"success\")\n    }\n    \n    const handleExtraSpace = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"))\n        props.showAlert(\"Extra space is removed from Text\",\"success\")\n    }\n\n    const handleOnChange = (event) => {\n        // console.log(\"On Change\");\n        setText(event.target.value)\n    }\n\n    \n    const checkColor = () => {\n\n        if(props.mode === 'warning'){\n            return 'black'\n          }\n          else{\n            return 'white'\n          }\n    }\n\n    return(\n        <>\n        <div className=\"container my-3\" style={{color:checkColor()}}> \n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n                <textarea className={`form-control text-${props.mode === 'warning' ? 'dark' : 'white'} bg-${props.mode === 'warning' ? 'light' : 'dark'}`} value={text} placeholder=\"Enter the text here\" onChange={handleOnChange} id=\"mybox\" rows=\"8\" required ></textarea>\n            </div>\n                <button disabled={text.length === 0} className={`btn btn-${props.mode === \"warning\" ? 'warning':'dark'} mx-2 my-2`} onClick={handleOnSentence}>Convert to Sentence case</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.mode === \"warning\" ? 'warning':'dark'} mx-2 my-2`} onClick={handleOnUpClick}>Convert To Uppercase</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.mode === \"warning\" ? 'warning':'dark'} mx-2 my-2`} onClick={handleOnLoClick}>Convert To Lowercase</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.mode === \"warning\" ? 'warning':'dark'} mx-2 my-2`} onClick={handleOnCap}>Convert to Capitalize</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.mode === \"warning\" ? 'warning':'dark'} mx-2 my-2`} onClick={handleOnAlter}>aLtErNaTiNg cAsE</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.mode === \"warning\" ? 'warning':'dark'} mx-2 my-2`} onClick={handleOnInverse}>inVeRsE CaSe</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.mode === \"warning\" ? 'warning':'dark'} mx-2 my-2`} onClick={handleExtraSpace}>Remove Extra spaces</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.mode === \"warning\" ? 'warning':'dark'} mx-2 my-2`} onClick={handleCopy}>Copy to Clipboard</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.mode === \"warning\" ? 'warning':'dark'} mx-2 my-2`} onClick={download}>Download</button>\n                <button disabled={text.length === 0} className={`btn btn-${props.mode === \"warning\" ? 'warning':'dark'} mx-2 my-2`} onClick={handleOnClearClick}>Clear</button>\n        </div>\n\n        <div className=\"container my-3\" style={{color:checkColor()}}>\n            <h1>Your text summary</h1>\n            <p>{lineCount()} lines and {text.split(/\\s+/).filter((element) => {return element.length !== 0}).length} words and {text.length} characters</p>\n            <p>{0.008 * text.split(\" \").length} Minutes you need to read </p>\n            <h2>Preview</h2>\n            <p>{text.length>0 ? text:\"Nothing to Preview\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n    const Captilize = (word) => {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1); \n    }\n\n    return (\n        <div style={{height:'50px'}}>\n           {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n                <strong>{Captilize(props.alert.type)}</strong> {props.alert.msg} \n            </div>}\n        </div>\n    )\n}\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport React, { useState } from 'react'\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\n// import Route from './components/Route';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('warning');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n        setAlert(null);\n    }, 1500);\n}\n\nconst toggleMode = ()=>{\n  if(mode === 'warning'){\n    setMode('dark');\n    document.body.style.backgroundColor = '#042743';\n    showAlert(\"Dark mode has been enabled\", \"success\");\n  }\n  else{\n    setMode('warning');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode has been enabled\", \"success\");\n  }\n}\nreturn (\n  <>\n  <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n  <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n\n        {/* <Route exact path=\"/about\">\n          <About mode={mode} />\n        </Route> */}\n\n        {/* <Route exact path=\"/\"> */}\n        <Textform showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n        {/* </Route> */}\n               \n\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}